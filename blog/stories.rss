<?xml version="1.0"?>
<rss version="2.0">
<channel>
	<title>wissel.net Usability - Productivity - Business - The web - Singapore and Twins</title>
	<link>https://wissel.net/blog/stories.rss</link>
	<description>Thoughts, Insights and Opinions of Stephan H. Wissel. Topics included: Salesforce, Lotus Notes and Domino, IBM Websphere, NodeJS, JavaScript,  J2EE, .Net, Software Archtecture, Personcentric Development, Agile Software, SDLC, Singapore and my Twins</description>
	<language>en,de</language>
	<copyright>(C) 2003 - 2021 Stephan H. Wissel, All rights reserved</copyright>
	<pubdate>Thu, 06 Jun 2024 09:19:28 +0000</pubdate>
<item>
	<title>NoSQL schema design</title>
	<description>&lt;p&gt;A question that pops up frequently in developer discussions is "how to structure your data in a NoSQL way?". To shed a light on this, we have a look at the approach invented &lt;a href="https://www.dataversity.net/sql-at-50-a-lesson-in-how-to-stay-relevant-around-data/"&gt;50 years ago&lt;/a&gt; and still an &lt;a href="https://www.geeksforgeeks.org/normal-forms-in-dbms/"&gt;all time favorite&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Normalization&lt;/h3&gt;
&lt;p&gt;In a simple order example, we are looking at four tables:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Customer&lt;/li&gt;
 &lt;li&gt;Product&lt;/li&gt;
 &lt;li&gt;Order&lt;/li&gt;
 &lt;li&gt;OrderEntry&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="/blog/images/2024/nosqlschema.png" alt="CLassic SQL schema"&gt;&lt;/p&gt;
&lt;p&gt;In this design, there are no duplicates and some simple SQL can list out all I need, for example the order value for a given order:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-sql"&gt;SELECT oi.order_id,
       SUM(oi.quantity * p.price) AS order_total
FROM OrderItem oi
JOIN Product p ON oi.product_id = p.id
GROUP BY oi.order_id
WHERE oi.order_id = 67111;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or the revenue per customer:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-sql"&gt;SELECT c.id AS customer_id,
       c.name AS customer_name,
       SUM(oi.quantity * p.price) AS revenue
FROM Customer c
JOIN Order o ON c.id = o.customer_id
JOIN OrderItem oi ON o.id = oi.order_id
JOIN Product p ON oi.product_id = p.id
GROUP BY c.id, c.name;
&lt;/code&gt;&lt;/pre&gt;</description>
	<link>2024/06/nosql-schema-design.html</link>
	<author>Stephan H. Wissel</author>
	<guid>0d152760-23ce-11ef-ab74-87542543d935</guid>
	<pubDate>06 June 2024</pubDate>

</item>
<item>
	<title>Development Containers - the fine print</title>
	<description>&lt;p&gt;&lt;a href="https://containers.dev/"&gt;Development Containers&lt;/a&gt; are supposed to liberate your development environment from a specific local installation, like &lt;a href="https://opencontainers.org/"&gt;container technology&lt;/a&gt; liberated your runtimes (a.k.a &lt;a href="https://yaml.org/"&gt;YAML&lt;/a&gt;ed them into &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; or &lt;a href="https://kubernetes.io/"&gt;Kubernetes&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img src="/blog/images/2024/MustUseHelmchart.png" alt="Helmchart Pun"&gt;&lt;/p&gt;
&lt;h3&gt;Development != Runtime&lt;/h3&gt;
&lt;p&gt;Containerization for development has some overlap and quite some difference to containerization for production:&lt;/p&gt;
&lt;table&gt;
 &lt;thead&gt;
  &lt;tr&gt;
   &lt;th&gt;Topic&lt;/th&gt;
   &lt;th&gt;Development&lt;/th&gt;
   &lt;th&gt;Production&lt;/th&gt;
  &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt;Mutability&lt;/td&gt;
   &lt;td&gt;You alter container content&lt;/td&gt;
   &lt;td&gt;Container is static&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Network&lt;/td&gt;
   &lt;td&gt;Use internal network&lt;/td&gt;
   &lt;td&gt;Use internal network&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Access&lt;/td&gt;
   &lt;td&gt;Developer tools++&lt;/td&gt;
   &lt;td&gt;Browser / App&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Containers&lt;/td&gt;
   &lt;td&gt;multiple&lt;/td&gt;
   &lt;td&gt;multiple&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Volumes&lt;/td&gt;
   &lt;td&gt;primary container binds projectdir&lt;br&gt;
    all others &lt;strong&gt;mount&lt;/strong&gt; only&lt;/td&gt;
   &lt;td&gt;all: bind or mount&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Configuration&lt;/td&gt;
   &lt;td&gt;&lt;code&gt;devcontainer.json&lt;/code&gt;, &lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/td&gt;
   &lt;td&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;,&lt;code&gt;Helm Chart&lt;/code&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Scope&lt;/td&gt;
   &lt;td&gt;Runtime &amp;amp; Tooling&lt;/td&gt;
   &lt;td&gt;Runtime&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Dockerfile&lt;/td&gt;
   &lt;td&gt;Setup development environment&lt;/td&gt;
   &lt;td&gt;Configure production&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Insights&lt;/h3&gt;
&lt;ul&gt;
 &lt;li&gt;There are many &lt;a href="https://containers.dev/overview"&gt;getting started&lt;/a&gt; resources available: &lt;a href="https://code.visualstudio.com/docs/devcontainers/containers"&gt;here&lt;/a&gt;, &lt;a href="https://code.visualstudio.com/docs/devcontainers/tutorial"&gt;here&lt;/a&gt;, &lt;a href="https://www.jetbrains.com/help/idea/connect-to-devcontainer.html"&gt;here&lt;/a&gt;, &lt;a href="https://www.google.com/search?q=devcontainer+tutorial"&gt;here&lt;/a&gt; and &lt;a href="https://github.com/0916dhkim/vscode-devcontainer-tutorial"&gt;here&lt;/a&gt;. They are working examples, commonly strong on what and how, but light on why&lt;/li&gt;
 &lt;li&gt;There are &lt;a href="https://containers.dev/templates"&gt;plenty of templates&lt;/a&gt; to learn by example&lt;/li&gt;
 &lt;li&gt;There seem to be substantial differences how it works on different platforms, subtle and annoying&lt;/li&gt;
 &lt;li&gt;On macOS (14.4.1) with with the &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers"&gt;devcontainer plugin&lt;/a&gt; 0.364.0 mount binds would not work in auxiliary containers, only in the main app&lt;/li&gt;
 &lt;li&gt;I couldn't find any descrption which subset of &lt;a href="https://compose-spec.io"&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt; is supported&lt;/li&gt;
 &lt;li&gt;The most interesting templates, for now, live on the &lt;a href="https://mcr.microsoft.com/en-us/"&gt;Microsoft Artifact Registry&lt;/a&gt;, when you know &lt;a href="https://mcr.microsoft.com/en-us/catalog?search=Container%20Images"&gt;how to look&lt;/a&gt;. Starting with those saves you tons of time and frustration&lt;/li&gt;
 &lt;li&gt;You will love &lt;code&gt;code --list-extensions&lt;/code&gt; to figure out the extensions you have in your vscode (unless you are a code n00b and don't have any)&lt;/li&gt;
&lt;/ul&gt;</description>
	<link>2024/05/devcontainers-the-fine-print.html</link>
	<author>Stephan H. Wissel</author>
	<guid>99f119a0-0b87-11ef-b8a5-450dafcfe327</guid>
	<pubDate>12 May 2024</pubDate>

</item>
<item>
	<title>Maven build with multiple Java versions</title>
	<description>&lt;p&gt;Imagine, you are tasked with maintaining a &lt;a href="https://opensource.hcltechsw.com/Domino-rest-api/index.html"&gt;Java application&lt;/a&gt; that needs to run on more than one Java version. You want to ensure that it compiles, tests and builds on all of them.&lt;br&gt;
  This is our story, buckle up, there are a few moving parts&lt;/p&gt;
&lt;h3&gt;The big picture&lt;/h3&gt;
&lt;ul&gt;
 &lt;li&gt;We use &lt;a href="https://maven.apache.org/"&gt;Apache Maven&lt;/a&gt; to drive the project using the &lt;code&gt;pom.xml&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;The &lt;a href="https://maven.apache.org/plugins/maven-toolchains-plugin/"&gt;Maven Toolchains&lt;/a&gt; plugin controls the Java versions&lt;/li&gt;
 &lt;li&gt;Using &lt;code&gt;&amp;lt;properties&amp;gt; ... &amp;lt;/properties&amp;gt;&lt;/code&gt; and &lt;a href="https://maven.apache.org/guides/introduction/introduction-to-profiles.html"&gt;Build Profiles&lt;/a&gt; to adjust conditions for processing&lt;/li&gt;
 &lt;li&gt;Annotatiosn like &lt;code&gt;@Only8&lt;/code&gt; and &lt;code&gt;@Only17&lt;/code&gt; help to qualify tests&lt;/li&gt;
 &lt;li&gt;Our build tool (&lt;a href="https://www.jenkins.io/"&gt;Jenkins&lt;/a&gt; or &lt;a href="https://github.com/features/actions"&gt;Github Actions&lt;/a&gt;) will use a container provided (in our case based on &lt;a href="https://www.redhat.com/en/blog/introducing-red-hat-universal-base-image"&gt;Redhat UBI&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;</description>
	<link>2024/04/maven-build-with-multiple-java-versions.html</link>
	<author>Stephan H. Wissel</author>
	<guid>e01d6620-fbcb-11ee-83f2-810c012896ec</guid>
	<pubDate>16 April 2024</pubDate>

</item>
<item>
	<title>nginx as ingress for Docker compose</title>
	<description>&lt;p&gt;In June I wrote about how to use &lt;a href="/blog/2023/06/docker-nginx-spa-and-brotli-compression.html"&gt;Docker &amp;amp; nginx&lt;/a&gt; to deliver statically rendered &lt;a href="https://github.com/google/brotli"&gt;brotli&lt;/a&gt; files for your web (frontend) application. It improves delivery quite a bid, but left me wonder: isn't there too much static WebServer involved?&lt;/p&gt;
&lt;h3&gt;Double hop to deliver static files&lt;/h3&gt;
&lt;p&gt;A typical web application using micro/mini/midi services looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src="/blog/images/2023/TypicalDockerConfig.jpg" alt="A typical Docker configuration"&gt;&lt;/p&gt;
&lt;p&gt;It is common, easy and concerns quite separated. However it comes with a set of challenges:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;nginx doesn't do http/2 on &lt;a href="https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/"&gt;&lt;code&gt;proxy_pass&lt;/code&gt;&lt;/a&gt;, so you miss the ability to serve static files directly with http/2&lt;/li&gt;
 &lt;li&gt;For static file we have two nginx involved&lt;/li&gt;
 &lt;li&gt;Each service needs to be exposed to the host at some port&lt;/li&gt;
 &lt;li&gt;The service architecture leaks to the host based nginx. SO any change in service needs an update to the &lt;code&gt;docker-compose.yml&lt;/code&gt; &lt;strong&gt;AND&lt;/strong&gt; the host based nginx configuration&lt;/li&gt;
 &lt;li&gt;the containers depend on that, external to them, configuration&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So I tried to design a better way to handle this without going all &lt;a href="https://kubernetes.io/"&gt;K-in&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src="/blog/images/2023/DockerConfigWithNginx.jpg" alt="Docker configuration with ingress as component"&gt;&lt;/p&gt;
&lt;p&gt;This looed like a more promising approach:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Services could be addressed with their internal network name&lt;/li&gt;
 &lt;li&gt;Only Ports 80 and 443 of one container need exposure on the host&lt;/li&gt;
 &lt;li&gt;The nginx configuration inside the container is immutable and can't accidentially be reconfigured in production (your image comes from a pipeline isn't it)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Challenges&lt;/h3&gt;
&lt;ul&gt;
 &lt;li&gt;When trying to configure certbot, I initially tried using the &lt;code&gt;--nginx&lt;/code&gt; parameter with an http challenge and shared data mounts. None of the attempts worked satisfactory, so at the end I settled on a&lt;a href="https://letsencrypt.org/docs/challenge-types/#dns-01-challenge"&gt;DNS-01&lt;/a&gt; using &lt;a href="https://www.cloudflare.com/"&gt;CloudFlare&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Since I wanted the nginx configuration to be inside the container image (and not on a data mount), a good understandig of nginx's configuration is necessary. The only persisted information was &lt;code&gt;/etc/letsencrypt&lt;/code&gt; for the certificate and a secret for CloudFlare credentials&lt;/li&gt;
 &lt;li&gt;When the nginx configuration is statically configured for TLS, on initial load it will fail since the certs don't exist yet. Auntie Google suggested a manual run of certbot, but I favour &lt;code&gt;docker compose up&lt;/code&gt; to handle everything&lt;/li&gt;
 &lt;li&gt;I ended up creating my own docker images, which was an epiphany: it absolutely makes sense to build a container image for single use instead of trying hard to make it configurable and vulnerable to mis-configuration&lt;/li&gt;
&lt;/ul&gt;</description>
	<link>2023/11/nginx-as-ingress-for-docker-compose.html</link>
	<author>Stephan H. Wissel</author>
	<guid>c5cd81d0-83ab-11ee-a943-5f6e43c4acd6</guid>
	<pubDate>15 November 2023</pubDate>

</item>
<item>
	<title>Quarkus and GraalVM starter</title>
	<description>&lt;p&gt;When &lt;a href="https://www.java.com/en/"&gt;Java&lt;/a&gt; is one of the languanges in your portfolio, you might have heard of &lt;a href="https://quarkus.io/"&gt;Quarkus&lt;/a&gt;, an alternative to &lt;a href="https://spring.io/projects/spring-boot"&gt;Spring Boot&lt;/a&gt; build on top of &lt;a href="https://vertx.io"&gt;vert.x&lt;/a&gt; and &lt;a href="https://www.graalvm.org/"&gt;GraalVM&lt;/a&gt;, a polyglot runtime for Java and other languages.&lt;/p&gt;
&lt;p&gt;This article describes the getting started that worked for me.&lt;/p&gt;
&lt;h3&gt;Moving parts&lt;/h3&gt;
&lt;p&gt;The fist hurdle to overcome is to install all the bits and pieces. There are plenty of versions (Java 11 - Java 21) and methods (maven, CLI, packet managers), so it con be confusing what to pick. I tried most of them and created a mess and a deep appreciation for the "reset to snapshot" feature afforded by virtual machines. Instructions work for macOS, Linux or &lt;a href="https://www.graalvm.org/"&gt;Linux on Windows&lt;/a&gt;.Here we go:&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;install &lt;a href="https://sdkman.io/"&gt;SdkMan&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The tool helps to keep your software development kits under control. From their website:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;"Meet SDKMAN! ? your reliable companion for effortlessly managing multiple Software Development Kits on Unix systems. Imagine having different versions of SDKs and needing a stress-free way to switch between them. SDKMAN! steps in with its easy-to-use Command Line Interface (CLI) and API."&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -s "https://get.sdkman.io" | bash
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can thank me later. Side note: there are 16 different JDK offerings that can be installed, we are spoiled &lt;a href="https://thedecisionlab.com/reference-guide/economics/the-paradox-of-choice"&gt;for choices&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;install &lt;a href="https://www.graalvm.org/"&gt;GraalVM&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Currently, as of time of writing, there are three GraalVM distributions available. The Open Source, community supported &lt;a href="https://github.com/oracle/graal/"&gt;GraalVM Community Edition&lt;/a&gt;, the commercial, Oracle supported &lt;a href="https://www.graalvm.org/downloads/"&gt;Oracle GraalVM&lt;/a&gt; which requires a license in production and the ReedHat backed &lt;a href="https://github.com/graalvm/mandrel"&gt;Mandrel&lt;/a&gt;. Mandrel is advertised as "specifically to support Quarkus". The Java 21 version was not yet available on sdkman, so I used the community edition. To stick with Mandrel I will use the container build option, later more on that&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;# List SDKs
sdk list java
# install GraalVM
sdk install java 21-graaalce
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
 &lt;li&gt;Install &lt;a href="https://quarkus.io/"&gt;Quarkus&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This will install the Quarkus CLI and for good measure &lt;a href="https://maven.apache.org"&gt;Apache Maven&lt;/a&gt;. The Quarkus CLI makes a &lt;a href="https://quarkus.io/guides/ide-tooling"&gt;pleasant developer experience&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;sdk install quarkus
sdk install mvn
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
 &lt;li&gt;Install &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can use &lt;a href="https://www.docker.com/products/docker-desktop/"&gt;Docker desktop&lt;/a&gt; (required a license for larger organisations) or &lt;a href="https://rancherdesktop.io/"&gt;Rancher Desktop&lt;/a&gt; (which also handles Kubernetes), &lt;a href="https://podman-desktop.io/"&gt;Podman Desktop&lt;/a&gt;, any of &lt;a href="https://alternativeto.net/browse/search/?q=Docker"&gt;the alternatives&lt;/a&gt; or the command line. New to Docker? There's &lt;a href="https://www.google.com/search?q=how+to+install+docker"&gt;plenty of fish&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now we are good to go. Skipping the &lt;a href="https://quarkus.io/get-started/"&gt;Code with Quarkus&lt;/a&gt; tutorial lets build a n app in java and native put it into a container&lt;/p&gt;</description>
	<link>2023/10/quarkus-and-graalvm-starter.html</link>
	<author>Stephan H. Wissel</author>
	<guid>59234250-69c9-11ee-ba4c-cfc559bbd988</guid>
	<pubDate>13 October 2023</pubDate>

</item>
<item>
	<title>Fun with Azure Active Directory &amp; JWT</title>
	<description>&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Active_Directory"&gt;Active Directory&lt;/a&gt; has been the dominant standard for IT directories, even if it isn't &lt;a href="/blog/2014/01/a-short-history-of-directory-trees.html"&gt;the prettiest tree&lt;/a&gt; in the forrest. It's younger sibling &lt;a href="https://en.wikipedia.org/wiki/Microsoft_Azure_Active_Directory"&gt;~~Azure Active Directory~~ Entra ID&lt;/a&gt; is a big player in cloud based &lt;a href="https://en.wikipedia.org/wiki/Identity_provider"&gt;Identity Providers (IdP)&lt;/a&gt;. Unsurprisingly it behaves differently than the gold standard &lt;a href="https://www.keycloak.org/"&gt;KeyCloak&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;JWT expectations&lt;/h3&gt;
&lt;p&gt;A &lt;a href="https://en.wikipedia.org/wiki/JSON_Web_Token"&gt;Json Web Token (JWT)&lt;/a&gt; payload is a &lt;strong&gt;very&lt;/strong&gt; losely definded &lt;a href="https://en.wikipedia.org/wiki/JSON"&gt;JSON&lt;/a&gt; object with various claims. There is only a minimal consent of properties":&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "iss": "https://where-it-came-from",
  "audience": "https://where-it-should-be-valid",
  "iat": "DATE/TIME -&amp;gt; issued at",
  "exp": "DATE/TIME -&amp;gt; expiry",
  "scope": "space separated list of scopes",
  "email": "user's email"
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The whole thing is (un)defined in &lt;a href="https://datatracker.ietf.org/doc/html/rfc7519"&gt;RFC7519&lt;/a&gt;, sufficiently loose, so anyone can claim to be standard compliant and nothing is interoperable (just like &lt;a href="https://datatracker.ietf.org/doc/html/rfc5545"&gt;ical&lt;/a&gt;). There is a &lt;a href="https://www.iana.org/assignments/jwt/jwt.xhtml"&gt;list of known claims&lt;/a&gt;, but RFC7519 states: "&lt;em&gt;None of the claims&lt;br&gt;
   defined below are intended to be mandatory to use or implement in all&lt;br&gt;
   cases, but rather they provide a starting point for a set of useful,&lt;br&gt;
   interoperable claims.&lt;/em&gt;"&lt;/p&gt;
&lt;p&gt;To ease validation of signatures, one can use an URL &lt;code&gt;.../.well-known/openid-configuration&lt;/code&gt; which provides a number of needed properties:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;various endpoint URLs for authentication and token exchange&lt;/li&gt;
 &lt;li&gt;&lt;code&gt;issuer&lt;/code&gt;: The value corresponding to the &lt;code&gt;iss&lt;/code&gt; property in a JWT&lt;/li&gt;
 &lt;li&gt;&lt;code&gt;jwks_uri&lt;/code&gt;: URL to read the public key to validate signatures&lt;/li&gt;
 &lt;li&gt;&lt;code&gt;scopes_supported&lt;/code&gt;: what scopes does the API support&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Azure - same but different&lt;/h3&gt;
&lt;p&gt;When you setup &lt;a href="https://help.hcltechsw.com/domino/12.0.2/admin/secu_config_http_bearer_auth_using_oidc_c.html"&gt;Domino for JWT&lt;/a&gt; you need a series of specific conditions. The interesting parts from the documentation:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;em&gt;One of the JWT's "aud" (audience) claims must match the Domino Internet Site's host name&lt;/em&gt;&lt;/li&gt;
 &lt;li&gt;&lt;em&gt;JWTs must contain a "iss" (issuer) claim matching the "issuer" returned from the OIDC provider's .well-known/openid-configuration endpoint&lt;/em&gt;&lt;/li&gt;
 &lt;li&gt;&lt;em&gt;JWTs must contain a "scope" claim that includes "Domino.user.all"&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you follow &lt;a href="https://opensource.hcltechsw.com/Domino-rest-api/howto/IdP/configuringAD.html"&gt;KEEP's how to configure Azure AD&lt;/a&gt; you will find a set of pain points, in no specific order:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;You can't remove claims you don't need&lt;/li&gt;
 &lt;li&gt;Azure AD will not issue a &lt;code&gt;scope&lt;/code&gt; claim, but an &lt;code&gt;scp&lt;/code&gt; claim&lt;/li&gt;
 &lt;li&gt;The &lt;code&gt;aud&lt;/code&gt; claim is fixed to the "Application ID URI"&lt;/li&gt;
 &lt;li&gt;The &lt;code&gt;iss&lt;/code&gt; claim in a token does not match the &lt;code&gt;issuer&lt;/code&gt; property from &lt;code&gt;well-known/openid-configuration&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;The &lt;code&gt;jwks_uri&lt;/code&gt; URL does not return an &lt;code&gt;alg&lt;/code&gt; property for the algorythm (nor did I find any way to request an &lt;a href="https://en.wikipedia.org/wiki/Elliptic-curve_cryptography"&gt;Elliptic-curve&lt;/a&gt; signer)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So there's tons of fun to be had with Azure ~~Active Directory~~ Entra ID&lt;/p&gt;</description>
	<link>2023/08/fun-with-azure-active-directory-and-jwt.html</link>
	<author>Stephan H. Wissel</author>
	<guid>0fd1b040-465c-11ee-8527-1ded1f8f3d81</guid>
	<pubDate>29 August 2023</pubDate>

</item>
<item>
	<title>Primary Posture Applications</title>
	<description>&lt;p&gt;We use a multitude of applications per day. Each of them captures some level of attention and interaction. &lt;a href="https://en.wikipedia.org/wiki/Alan_Cooper"&gt;Alan Cooper&lt;/a&gt; coined the term &lt;a href="https://en.wikipedia.org/wiki/Application_posture"&gt;Application posture&lt;/a&gt;, with the mainly used application being the &lt;a href="https://uxplanet.org/application-posture-d896bceda537"&gt;&lt;strong&gt;sovereign application&lt;/strong&gt;&lt;/a&gt;. I personally like the term &lt;strong&gt;primary posture application&lt;/strong&gt; better and will use it in this post&lt;/p&gt;
&lt;h3&gt;Being primany&lt;/h3&gt;
&lt;p&gt;Since users spend most of their time in it, there's a willingness to become "senior intermediate experts". Shortcuts are learned, workflows get shared and a deeper understanding is desired. Depending on the nature of your work, very different application are your primary&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;for a graphic desiger it might be &lt;a href="https://www.gimp.org/"&gt;GIMP&lt;/a&gt; or &lt;a href="https://inkscape.org/"&gt;Inkscape&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;a vlogger spends lot of time in &lt;a href="https://obsproject.com/"&gt;OBS&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;The controllers spend their days in spreadsheets&lt;/li&gt;
 &lt;li&gt;The sales manager in &lt;a href="https://salesforce.com/"&gt;CRM&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;Operations is fond of &lt;a href="https://sap.com/"&gt;ERP&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;eMail and chat are strong contenders too&lt;/li&gt;
 &lt;li&gt;the Scrum master lives in Jira, while developers on the command-line and IDE&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Primary posture by association&lt;/h3&gt;
&lt;p&gt;To cover anything else, aggregators were used. Trailblazer here was the &lt;a href="https://en.wikipedia.org/w/index.php?title=Lotus_Notes"&gt;Lotus Notes Client&lt;/a&gt;: One did everything in Notes, the main job and all the auxiliary and transient would be there. This consistency was attempted to recreate using portals and intranets (for inspiration what intranets can achieve, head over to &lt;a href="https://www.nngroup.com/reports/topic/intranets/"&gt;The Nielsen Norman Group&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;Auxiliary applications&lt;/h3&gt;
&lt;p&gt;You need to complete a task fast and want effortless results. An auxiliary posture helps with that. Adding an appointment in a calendar, booking a ride share, filing tax returns.&lt;/p&gt;
&lt;h3&gt;Auxiliary applications with a primary posture&lt;/h3&gt;
&lt;p&gt;One's primary application is another's auxiliary. This is a huge problem especially for bespoke applications. Typically they are comissioned by departments who will use them in "primary posture" (e.g. the leave management system gets commissioned by HR). The leave administrator will happily learn all bells and whistles, while mortal users are irritated by the complexity. I recall working on a leave management system where the initial application form had over 30 fields to cover all eventualities. We were able to convince the application owner to take a 2 form approach: the initial form had: coming, going, type of leave and optional "on behalf". 2 buttons were offered: "more" and "submit". "More" would lead to the 30+ fields form. We monitored usage for 6 month. Not a single time the larger form was submitted.&lt;/p&gt;
&lt;h3&gt;Multiple front-ends&lt;/h3&gt;
&lt;p&gt;To avoid the primary auxiliary trap, a clear API that separates UI from business logic helps. It allows to build smaller front-ends that are auxiliary in nature but don't compromize integrity. &lt;a href="https://www.openapis.org/"&gt;OpenAPI&lt;/a&gt; is your friend&lt;/p&gt;</description>
	<link>2023/08/primary-posture-applications.html</link>
	<author>Stephan H. Wissel</author>
	<guid>77462770-40a2-11ee-9a9a-81b1521576ba</guid>
	<pubDate>21 August 2023</pubDate>

</item>
<item>
	<title>Passphrase Generator</title>
	<description>&lt;p&gt;Passphrases are considered easier to remember for humans and harder to crack for machines, famously explained in &lt;a href="https://xkcd.com/936/"&gt;this comic&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://xkcd.com/936/"&gt;&lt;img src="https://imgs.xkcd.com/comics/password_strength.png" alt="Pasword strength"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The challenge then is to have a good word list to pick from. There are &lt;a href="https://wordcounter.io//blog/how-many-words-does-the-average-person-know"&gt;various measurements&lt;/a&gt; on how many words one person would &lt;strong&gt;use&lt;/strong&gt; which could be as low as a thousand. Note there is a huge difference between &lt;em&gt;recognize&lt;/em&gt; and &lt;em&gt;use&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;Passphrases and dices&lt;/h3&gt;
&lt;p&gt;In a recent &lt;a href="https://chaos.social/@stw/110756503711275152"&gt;Toot exchange&lt;/a&gt; &lt;a href="https://chaos.social/@ospalh"&gt;ospalh&lt;/a&gt; pointed me to &lt;a href="https://en.wikipedia.org/wiki/Diceware"&gt;Diceware&lt;/a&gt;, a method to use &lt;a href="https://diceware.dmuth.org"&gt;dice rolls&lt;/a&gt; and a word list to determine a passphrase. Usually one uses the regular 6 sides dices and 5 dices, which lets you pick from a 7776 member word list. The &lt;a href="https://www.eff.org"&gt;EFF&lt;/a&gt; published &lt;a href="https://www.eff.org/deeplinks/2018/08/dragon-con-diceware"&gt;a version using the 20-sided dice&lt;/a&gt; from &lt;a href="https://en.wikipedia.org/wiki/Dungeons_%26_Dragons"&gt;Dungeon and Dragons&lt;/a&gt; as well as various word lists.&lt;/p&gt;
&lt;h3&gt;Wordlists&lt;/h3&gt;
&lt;p&gt;An attacker who doesn't know that they are dealing with a passphrase, using conventional cracking methods stands little chance to decipher the phrase. However as the defender you must assume, they know your word list, so it is imperative to keep it long, while maintaining the odds to remember (in any case you can use some &lt;a href="https://bitwarden.com"&gt;extra brain&lt;/a&gt;). SOme of the word lists you can find online:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;a href="https://theworld.com/%7Ereinhold/diceware.wordlist.asc"&gt;Arnold Reinhold's Diceware list&lt;/a&gt;, 1995, 7776 entries&lt;/li&gt;
 &lt;li&gt;&lt;a href="https://www.eff.org/files/2016/07/18/eff_large_wordlist.txt"&gt;EFF list from 2016&lt;/a&gt;, 2016, 7776 entries (introduced &lt;a href="https://www.eff.org/deeplinks/2016/07/new-wordlists-random-passphrases"&gt;here&lt;/a&gt;)&lt;/li&gt;
 &lt;li&gt;&lt;a href="https://www.eff.org/deeplinks/2018/08/dragon-con-diceware"&gt;Fandom generated word lists&lt;/a&gt; by EFF for the 20 side dice&lt;/li&gt;
 &lt;li&gt;&lt;a href="https://www.eff.org/files/2018/08/29/gameofthrones_8k-2018.txt"&gt;Game of Thrones&lt;/a&gt;, 2018, 4000 entries&lt;/li&gt;
 &lt;li&gt;&lt;a href="https://www.eff.org/files/2018/08/29/harrypotter_8k_3column-txt.txt"&gt;Harry Potter&lt;/a&gt;, 2018, 4000 entries&lt;/li&gt;
 &lt;li&gt;&lt;a href="https://www.eff.org/files/2018/08/29/memory-alpha_8k_2018.txt"&gt;Star Track&lt;/a&gt;, 2018, 4000 entries&lt;/li&gt;
 &lt;li&gt;&lt;a href="https://www.eff.org/files/2018/08/29/starwars_8k_2018.txt"&gt;Star Wars&lt;/a&gt;, 2018, 4000 entries&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Math.random() to replace dices&lt;/h3&gt;
&lt;p&gt;Let's roll (pun intended) our own passphrase generator. To make it a little more fun these are our constrains:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;passphrase has 5 elements: 4 words and one 6 digit number&lt;/li&gt;
 &lt;li&gt;the number appears at a random position&lt;/li&gt;
 &lt;li&gt;elements are separated by a &lt;code&gt;-&lt;/code&gt; (for readability, in active use you might just filter them out)&lt;/li&gt;
&lt;/ul&gt;</description>
	<link>2023/07/passphrase-generator.html</link>
	<author>Stephan H. Wissel</author>
	<guid>20817830-29fb-11ee-8ef8-8bb241062b76</guid>
	<pubDate>24 July 2023</pubDate>

</item>
<item>
	<title>Keep your github container registry tidy</title>
	<description>&lt;p&gt;SO you drank the cool-aid, like me, and use &lt;a href="https://github.com/features/actions"&gt;GitHub Actions&lt;/a&gt; to build your projects and &lt;a href="https://github.com/features/packages"&gt;GitHub pacckages&lt;/a&gt; for your private containers, maven produced Jars, npm modules. Soon your honeymoon is over and you hit the storage limit of your account.&lt;/p&gt;
&lt;h3&gt;You need to clean up&lt;/h3&gt;
&lt;p&gt;Looking at the packages you will notice, that they are all there, all the version, in case of containers even the untagged ones. The root of the problem is equally the solution: a GitHub Action to &lt;a href="https://github.com/marketplace/actions/delete-package-versions"&gt;delete package versions&lt;/a&gt;. The package is very flexible and well documented, outlining &lt;a href="https://github.com/marketplace/actions/delete-package-versions#scenarios"&gt;several scenarios&lt;/a&gt; how to put it to use&lt;/p&gt;
&lt;h2&gt;Things to watch out for&lt;/h2&gt;
&lt;p&gt;You have to decide when you want to put it to use:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;on schedule, like &lt;a href="https://www.youtube.com/watch?v=mthSq-u2i7A"&gt;every Friday&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;manual, pressing a button&lt;/li&gt;
 &lt;li&gt;on each build, when you add a new package&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also experienced that &lt;code&gt;{{ secrets.GITHUB_TOKEN }}&lt;/code&gt; wouldn't work when the package you target is private, even when it is in the same repository. Once you know, it's not a big deal, just create a &lt;a href="https://github.com/settings/tokens"&gt;PAT&lt;/a&gt; and add it to the repository's secrets. You might want to add &lt;code&gt;workflow_dispatch&lt;/code&gt; to all triggers, so you can test run them anytime.&lt;/p&gt;</description>
	<link>2023/07/keep-your-github-container-registry-tidy.html</link>
	<author>Stephan H. Wissel</author>
	<guid>8d4324b0-253b-11ee-aa6d-b183cc9640ea</guid>
	<pubDate>18 July 2023</pubDate>

</item>
<item>
	<title>Deploy private npm packages into private containers using github actions</title>
	<description>&lt;p&gt;&lt;a href="https://github.com/features/actions"&gt;GitHub Actions&lt;/a&gt; are rapidly becoming my favorite CI environment. Their &lt;a href="https://github.com/marketplace?type=actions"&gt;marketplace&lt;/a&gt; has an action for everything. Sometimes it takes a little trial and error before things work smoothly. This is one of that stories.&lt;/p&gt;
&lt;h3&gt;Authentication is everything&lt;/h3&gt;
&lt;p&gt;Imagine the following scenario: you have developed a set of private TypeScript (or JavaScript) packages and have &lt;a href="https://docs.github.com/en/packages/quickstart"&gt;successfully deployed&lt;/a&gt; them to the &lt;strong&gt;private&lt;/strong&gt; GitHub npm registry under the name &lt;code&gt;@myfamousorg/coolpackage&lt;/code&gt; - where &lt;code&gt;myfamousorg&lt;/code&gt; must match the repository owner (org or individual).&lt;/p&gt;
&lt;p&gt;Now you want to use them in your application. That application shall be packed in a Container and made available in GitHub's private registry. All that automated using GitHub Actions.&lt;/p&gt;
&lt;h3&gt;You will need a PAT (or two)&lt;/h3&gt;
&lt;p&gt;In GitHub, head to the &lt;a href="https://github.com/settings/tokens"&gt;Personal access tokens / Tokens (classic)&lt;/a&gt; section of your developer settings in profile. You need to &lt;a href="https://github.com/settings/tokens/new"&gt;create tokens&lt;/a&gt; that allow you to handle packages.&lt;/p&gt;
&lt;p&gt;&lt;img src="/blog/images/2023/GitHubToken.png" alt="GitHub Tokens"&gt;&lt;/p&gt;
&lt;p&gt;There are two places where you want to enter that token:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;In &lt;code&gt;https://github.com/[your-org]/[your-repo]/settings/secrets/actions&lt;/code&gt; create a key &lt;code&gt;GIT_NPM_PACKAGES&lt;/code&gt; and copy your PAT there. You can pick any name, you will need it in the GitHub action later&lt;/li&gt;
 &lt;li&gt;In &lt;code&gt;~/.npmrc&lt;/code&gt;, your global settings for npm in your home directory. Don't put the info in the &lt;code&gt;.npmrc&lt;/code&gt; in your git project.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="language-properties"&gt;prefix=/home/[your username]/.npm-packages
@myfamousorg:registry=https://npm.pkg.github.com
//npm.pkg.github.com/:_authToken=[here goes the token]

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;prefix&lt;/code&gt; property allows you to run `npm install -g [package] without admin access.&lt;/p&gt;</description>
	<link>2023/07/deploy-nodejs-with-private-packages-in-docker.html</link>
	<author>Stephan H. Wissel</author>
	<guid>a81d27ba-4cf9-444d-99e6-c4813be2e9f4</guid>
	<pubDate>16 July 2023</pubDate>

</item>

</channel>
</rss>
