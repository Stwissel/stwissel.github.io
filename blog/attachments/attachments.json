{
  "entries": {
    "/blog/downloads/Attachmentsizes.htm/$File/": {
      "url": "/blog/downloads/Attachmentsizes.htm/$File/",
      "subject": "Attachmentsizes.zip",
      "description": "",
      "created": "Oct 30, 2007 11:23:34 PM",
      "subEntries": [
        {
          "url": "/blog/downloads/2007/Attachmentsizes.zip",
          "subject": "Attachmentsizes.zip",
          "description": "",
          "created": "Oct 30, 2007 11:23:34 PM"
        }
      ]
    },
    "/blog/downloads/CoreHandler/$File/": {
      "url": "/blog/downloads/CoreHandler/$File/",
      "subject": "CoreHandler",
      "description": "Part of the brute force view tuning\n",
      "created": "Nov 25, 2011 2:05:24 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2011/CoreHandlerLibrary.lss",
          "subject": "CoreHandlerLibrary.lss",
          "description": "Part of the brute force view tuning\n",
          "created": "Nov 25, 2011 2:05:24 AM"
        },
        {
          "url": "/blog/downloads/2011/AgentSupport.lss",
          "subject": "AgentSupport.lss",
          "description": "Part of the brute force view tuning\n",
          "created": "Nov 25, 2011 2:05:24 AM"
        }
      ]
    },
    "/blog/downloads/DXL2WSDLv0.1.html/$File/": {
      "url": "/blog/downloads/DXL2WSDLv0.1.html/$File/",
      "subject": "DXL2WSDLv0.1.xslt",
      "description": "",
      "created": "Dec 14, 2006 12:00:00 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2006/DXL2WSDLv0.1.xslt",
          "subject": "DXL2WSDLv0.1.xslt",
          "description": "",
          "created": "Dec 14, 2006 12:00:00 AM"
        }
      ]
    },
    "/blog/downloads/Dojoburn/$File/": {
      "url": "/blog/downloads/Dojoburn/$File/",
      "subject": "Burn Chart in Dojo",
      "description": "A burn chart implementation in Dojo\n",
      "created": "Dec 30, 2010 1:56:06 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2010/burnchart.html",
          "subject": "burnchart.html",
          "description": "A burn chart implementation in Dojo\n",
          "created": "Dec 30, 2010 1:56:06 AM"
        }
      ]
    },
    "/blog/downloads/EventfullNotes.html/$File/": {
      "url": "/blog/downloads/EventfullNotes.html/$File/",
      "subject": "NotesClientEventExample.zip",
      "description": "",
      "created": "Jul 8, 2007 1:01:16 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2007/NotesClientEventExample.zip",
          "subject": "NotesClientEventExample.zip",
          "description": "",
          "created": "Jul 8, 2007 1:01:16 AM"
        }
      ]
    },
    "/blog/downloads/Form2LS01.html/$File/": {
      "url": "/blog/downloads/Form2LS01.html/$File/",
      "subject": "Form2LS.zip",
      "description": "",
      "created": "Sep 6, 2007 9:30:28 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2007/Form2LS.zip",
          "subject": "Form2LS.zip",
          "description": "",
          "created": "Sep 6, 2007 9:30:28 AM"
        }
      ]
    },
    "/blog/downloads/NotesMetrics/$File/": {
      "url": "/blog/downloads/NotesMetrics/$File/",
      "subject": "NotesMetrics",
      "description": "Source and Binary code for Java based tools\nto calculate Notes metrics\n",
      "created": "Dec 10, 2008 10:32:30 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2008/NotesMetricsTool.zip",
          "subject": "NotesMetricsTool.zip",
          "description": "Source and Binary code for Java based tools\nto calculate Notes metrics\n",
          "created": "Dec 10, 2008 10:32:30 AM"
        }
      ]
    },
    "/blog/downloads/SHWL-7BADL9/$File/": {
      "url": "/blog/downloads/SHWL-7BADL9/$File/",
      "subject": "Fetch the Lotusphere Presentations on one go",
      "description": "You need to replace the user name and password\nwith what you have on your Lotusphere batch.\n",
      "created": "Jan 28, 2008 5:52:23 PM",
      "subEntries": [
        {
          "url": "/blog/downloads/2008/getLotuspherePresentations.cmd",
          "subject": "getLotuspherePresentations.cmd",
          "description": "You need to replace the user name and password\nwith what you have on your Lotusphere batch.\n",
          "created": "Jan 28, 2008 5:52:23 PM"
        }
      ]
    },
    "/blog/downloads/SHWL-7J2V85/$File/": {
      "url": "/blog/downloads/SHWL-7J2V85/$File/",
      "subject": "ViewToXPage",
      "description": "Sample Stylesheet to transform a NotesView\ninto a xPage\n",
      "created": "Sep 1, 2008 7:12:11 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2008/ViewtoXPage.xslt",
          "subject": "ViewtoXPage.xslt",
          "description": "Sample Stylesheet to transform a NotesView\ninto a xPage\n",
          "created": "Sep 1, 2008 7:12:11 AM"
        }
      ]
    },
    "/blog/downloads/SHWL-7L9MRR/$File/": {
      "url": "/blog/downloads/SHWL-7L9MRR/$File/",
      "subject": "InspectDesign.java",
      "description": "Sample code to scan a database for design\nartifacts\n",
      "created": "Nov 11, 2008 12:50:45 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2008/InspectDesign.java",
          "subject": "InspectDesign.java",
          "description": "Sample code to scan a database for design\nartifacts\n",
          "created": "Nov 11, 2008 12:50:45 AM"
        }
      ]
    },
    "/blog/downloads/SHWL-7PPAH3/$File/": {
      "url": "/blog/downloads/SHWL-7PPAH3/$File/",
      "subject": "Read Protection Sample Database",
      "description": "Shows example code for efficient handling\nof multi category read access protected documents\n",
      "created": "Feb 28, 2009 3:13:37 PM",
      "subEntries": [
        {
          "url": "/blog/downloads/2009/ReadprotectionSample.nsf.zip",
          "subject": "ReadprotectionSample.nsf.zip",
          "description": "Shows example code for efficient handling\nof multi category read access protected documents\n",
          "created": "Feb 28, 2009 3:13:37 PM"
        }
      ]
    },
    "/blog/downloads/SHWL-7S9CVS/$File/": {
      "url": "/blog/downloads/SHWL-7S9CVS/$File/",
      "subject": "OneUIDummy.css",
      "description": "Helper File to get all class names that\nare used in Domino 8.5 OneUI theme\n",
      "created": "May 21, 2009 5:16:26 PM",
      "subEntries": [
        {
          "url": "/blog/downloads/2009/OneUIDummy.css",
          "subject": "OneUIDummy.css",
          "description": "Helper File to get all class names that\nare used in Domino 8.5 OneUI theme\n",
          "created": "May 21, 2009 5:16:26 PM"
        }
      ]
    },
    "/blog/downloads/SHWL-7UYH25/$File/": {
      "url": "/blog/downloads/SHWL-7UYH25/$File/",
      "subject": "Large ReaderFields &amp;gt; 32k members",
      "description": "Class that simulateses large reader fields\nby dynamically creating groups for them\n",
      "created": "Aug 16, 2009 8:48:08 PM",
      "subEntries": [
        {
          "url": "/blog/downloads/2009/largeReaderFields.lss",
          "subject": "largeReaderFields.lss",
          "description": "Class that simulateses large reader fields\nby dynamically creating groups for them\n",
          "created": "Aug 16, 2009 8:48:08 PM"
        }
      ]
    },
    "/blog/downloads/SHWL-7X3G44/$File/": {
      "url": "/blog/downloads/SHWL-7X3G44/$File/",
      "subject": "Stylesheets for Connections 2.5",
      "description": "XSLT Stylesheets for the ATOM content emitted\nby Lotus Connections 2.5. One style creates a table with custom fields\nas columns. Presumes all custom fields are the same (useful for surveys\netc.). The other one lists all attachments in an activity including size\nand download link\n",
      "created": "Oct 22, 2009 8:00:08 PM",
      "subEntries": [
        {
          "url": "/blog/downloads/2009/ConnectionsStyles.zip",
          "subject": "ConnectionsStyles.zip",
          "description": "XSLT Stylesheets for the ATOM content emitted\nby Lotus Connections 2.5. One style creates a table with custom fields\nas columns. Presumes all custom fields are the same (useful for surveys\netc.). The other one lists all attachments in an activity including size\nand download link\n",
          "created": "Oct 22, 2009 8:00:08 PM"
        }
      ]
    },
    "/blog/downloads/SHWL-822MQU/$File/": {
      "url": "/blog/downloads/SHWL-822MQU/$File/",
      "subject": "XPages 8.5.1 Server side API",
      "description": "Server side API\n",
      "created": "Jan 26, 2010 12:49:20 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2010/XPagesAPI_8.5.1.txt",
          "subject": "XPagesAPI_8.5.1.txt",
          "description": "Server side API\n",
          "created": "Jan 26, 2010 12:49:20 AM"
        }
      ]
    },
    "/blog/downloads/SHWL-85N9W8/$File/": {
      "url": "/blog/downloads/SHWL-85N9W8/$File/",
      "subject": "OneUI V2 CSS",
      "description": "OneUI V2 CSS files &nbsp;- no style definition\n",
      "created": "May 21, 2010 2:43:28 PM",
      "subEntries": [
        {
          "url": "/blog/downloads/2010/OneUIV2css.zip",
          "subject": "OneUIV2css.zip",
          "description": "OneUI V2 CSS files &nbsp;- no style definition\n",
          "created": "May 21, 2010 2:43:28 PM"
        }
      ]
    },
    "/blog/downloads/SHWL-8BQPJD/$File/": {
      "url": "/blog/downloads/SHWL-8BQPJD/$File/",
      "subject": "HTTPReader Class for Java",
      "description": "Dependencies on:\n\n",
      "created": "Dec 2, 2010 2:21:21 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2010/HTTPReader.java",
          "subject": "HTTPReader.java",
          "description": "Dependencies on:\n\n",
          "created": "Dec 2, 2010 2:21:21 AM"
        }
      ]
    },
    "/blog/downloads/SHWL-8FCKDT/$File/": {
      "url": "/blog/downloads/SHWL-8FCKDT/$File/",
      "subject": "Compare documents of 2 databases",
      "description": "Compares documents in databases that are\nrelated (e.g. replicas, backups, create with &quot;new copy&quot;) and\nfinds additions, deletions and alterations\n",
      "created": "Mar 27, 2011 10:49:16 PM",
      "subEntries": [
        {
          "url": "/blog/downloads/2011/CompareDatabases.lss",
          "subject": "CompareDatabases.lss",
          "description": "Compares documents in databases that are\nrelated (e.g. replicas, backups, create with &quot;new copy&quot;) and\nfinds additions, deletions and alterations\n",
          "created": "Mar 27, 2011 10:49:16 PM"
        }
      ]
    },
    "/blog/downloads/SHWL-8MRM36/$File/": {
      "url": "/blog/downloads/SHWL-8MRM36/$File/",
      "subject": "Simple XML Document",
      "description": "Java Class for XML\n",
      "created": "Oct 19, 2011 12:14:34 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2011/SimpleXMLDoc.java",
          "subject": "SimpleXMLDoc.java",
          "description": "Java Class for XML\n",
          "created": "Oct 19, 2011 12:14:34 AM"
        }
      ]
    },
    "/blog/downloads/SHWL-8RZKZC/$File/": {
      "url": "/blog/downloads/SHWL-8RZKZC/$File/",
      "subject": "XSLTTools",
      "description": "Tools to make your XSLT Day easier. Including\nextraction of media from a feed\n",
      "created": "Mar 2, 2012 11:20:32 PM",
      "subEntries": [
        {
          "url": "/blog/downloads/2012/XSLTHelper.jar",
          "subject": "XSLTHelper.jar",
          "description": "Tools to make your XSLT Day easier. Including\nextraction of media from a feed\n",
          "created": "Mar 2, 2012 11:20:32 PM"
        },
        {
          "url": "/blog/downloads/2012/feedburner2curl.xslt",
          "subject": "feedburner2curl.xslt",
          "description": "Tools to make your XSLT Day easier. Including\nextraction of media from a feed\n",
          "created": "Mar 2, 2012 11:20:32 PM"
        },
        {
          "url": "/blog/downloads/2012/xslt",
          "subject": "xslt",
          "description": "Tools to make your XSLT Day easier. Including\nextraction of media from a feed\n",
          "created": "Mar 2, 2012 11:20:32 PM"
        }
      ]
    },
    "/blog/downloads/SHWL-8TMKWK/$File/": {
      "url": "/blog/downloads/SHWL-8TMKWK/$File/",
      "subject": "Import MIME / EML messages into Notes",
      "description": "Classes to run imports:\npackage&nbsp;com.notessensei.mimeimport;\n\nimport&nbsp;java.io.IOException;\nimport&nbsp;java.io.InputStream;\nimport&nbsp;java.util.Stack;\n\nimport&nbsp;lotus.domino.Document;\nimport&nbsp;lotus.domino.MIMEEntity;\nimport&nbsp;lotus.domino.NotesException;\nimport&nbsp;lotus.domino.Session;\nimport&nbsp;lotus.domino.Stream;\n\nimport&nbsp;org.apache.james.mime4j.MimeException;\nimport&nbsp;org.apache.james.mime4j.parser.AbstractContentHandler;\nimport&nbsp;org.apache.james.mime4j.parser.ContentHandler;\nimport&nbsp;org.apache.james.mime4j.stream.BodyDescriptor;\nimport&nbsp;org.apache.james.mime4j.stream.Field;\n\npublic&nbsp;class&nbsp;DocContentHandler&nbsp;extends&nbsp;AbstractContentHandler&nbsp;implements\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;ContentHandler&nbsp;{\n\n&nbsp; &nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;TEXTMIMETYPE&nbsp;=&nbsp;&quot;text/plain&quot;;\n&nbsp; &nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;HTMLMIMETYPE&nbsp;=&nbsp;&quot;text/html&quot;;\n&nbsp; &nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;RTFIELDNAME&nbsp;=&nbsp;&quot;Body&quot;;\n\n&nbsp; &nbsp;&nbsp;Document&nbsp;doc&nbsp;=&nbsp;null;\n&nbsp; &nbsp; Session s&nbsp;=&nbsp;null;\n&nbsp; &nbsp;&nbsp;boolean&nbsp;mimeStatus&nbsp;=&nbsp;true;\n&nbsp; &nbsp; Stack&lt;MimePartInfo&gt;&nbsp;mimeParts&nbsp;=&nbsp;new&nbsp;Stack&lt;MimePartInfo&gt;();\n\n&nbsp; &nbsp;&nbsp;public&nbsp;DocContentHandler(Session\ns,&nbsp;Document&nbsp;newDoc)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.doc&nbsp;=&nbsp;newDoc;\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.s&nbsp;=&nbsp;s;\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;body(BodyDescriptor\nbd,&nbsp;InputStream&nbsp;is)&nbsp;throws&nbsp;MimeException,&nbsp;IOException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;String&nbsp;mtype&nbsp;=&nbsp;this.mimeParts.peek().getContentType();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;System.out.println(&quot;\n&nbsp; &nbsp; &nbsp;Mime-Part: &quot;&nbsp;+&nbsp;mtype);\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.createBody(bd,\nis);\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp;&nbsp;private&nbsp;void&nbsp;createBody(BodyDescriptor\nbd,&nbsp;InputStream&nbsp;is)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;try&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Stream notesIn&nbsp;=&nbsp;s.createStream();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; notesIn.setContents(is);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; notesIn.setPosition(0);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MimePartInfo p&nbsp;=&nbsp;this.mimeParts.peek();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MIMEEntity m&nbsp;=&nbsp;p.getMimepart();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m.setContentFromBytes(notesIn,\np.getContentType(),\nm.getEncoding());\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}&nbsp;catch&nbsp;(NotesException\ne)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;endBodyPart()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.pop();\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;endMessage()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;try&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; doc.save();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; s.setConvertMime(this.mimeStatus);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;System.out.println(&quot;\n&nbsp; &nbsp; &nbsp;-- Import complete&quot;);\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}&nbsp;catch&nbsp;(NotesException\ne)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;field(Field&nbsp;rawField)&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.peek().createHeader(rawField.getName(),\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rawField.getBody());\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;startBodyPart()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.peek().createChildEntity(mimeParts);\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;startMessage()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;try&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeStatus&nbsp;=&nbsp;s.isConvertMime();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; s.setConvertMime(false);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MIMEEntity body&nbsp;=&nbsp;doc.createMIMEEntity(DocContentHandler.RTFIELDNAME);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.push(new&nbsp;MimePartInfo(body));&nbsp;//\nFirst element on the stack\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}&nbsp;catch&nbsp;(NotesException\ne)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}\n&nbsp; &nbsp;&nbsp;}\n}\n",
      "created": "Apr 23, 2012 11:16:03 PM",
      "subEntries": [
        {
          "url": "/blog/downloads/2012/Tester.java",
          "subject": "Tester.java",
          "description": "Classes to run imports:\npackage&nbsp;com.notessensei.mimeimport;\n\nimport&nbsp;java.io.IOException;\nimport&nbsp;java.io.InputStream;\nimport&nbsp;java.util.Stack;\n\nimport&nbsp;lotus.domino.Document;\nimport&nbsp;lotus.domino.MIMEEntity;\nimport&nbsp;lotus.domino.NotesException;\nimport&nbsp;lotus.domino.Session;\nimport&nbsp;lotus.domino.Stream;\n\nimport&nbsp;org.apache.james.mime4j.MimeException;\nimport&nbsp;org.apache.james.mime4j.parser.AbstractContentHandler;\nimport&nbsp;org.apache.james.mime4j.parser.ContentHandler;\nimport&nbsp;org.apache.james.mime4j.stream.BodyDescriptor;\nimport&nbsp;org.apache.james.mime4j.stream.Field;\n\npublic&nbsp;class&nbsp;DocContentHandler&nbsp;extends&nbsp;AbstractContentHandler&nbsp;implements\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;ContentHandler&nbsp;{\n\n&nbsp; &nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;TEXTMIMETYPE&nbsp;=&nbsp;&quot;text/plain&quot;;\n&nbsp; &nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;HTMLMIMETYPE&nbsp;=&nbsp;&quot;text/html&quot;;\n&nbsp; &nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;RTFIELDNAME&nbsp;=&nbsp;&quot;Body&quot;;\n\n&nbsp; &nbsp;&nbsp;Document&nbsp;doc&nbsp;=&nbsp;null;\n&nbsp; &nbsp; Session s&nbsp;=&nbsp;null;\n&nbsp; &nbsp;&nbsp;boolean&nbsp;mimeStatus&nbsp;=&nbsp;true;\n&nbsp; &nbsp; Stack&lt;MimePartInfo&gt;&nbsp;mimeParts&nbsp;=&nbsp;new&nbsp;Stack&lt;MimePartInfo&gt;();\n\n&nbsp; &nbsp;&nbsp;public&nbsp;DocContentHandler(Session\ns,&nbsp;Document&nbsp;newDoc)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.doc&nbsp;=&nbsp;newDoc;\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.s&nbsp;=&nbsp;s;\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;body(BodyDescriptor\nbd,&nbsp;InputStream&nbsp;is)&nbsp;throws&nbsp;MimeException,&nbsp;IOException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;String&nbsp;mtype&nbsp;=&nbsp;this.mimeParts.peek().getContentType();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;System.out.println(&quot;\n&nbsp; &nbsp; &nbsp;Mime-Part: &quot;&nbsp;+&nbsp;mtype);\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.createBody(bd,\nis);\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp;&nbsp;private&nbsp;void&nbsp;createBody(BodyDescriptor\nbd,&nbsp;InputStream&nbsp;is)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;try&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Stream notesIn&nbsp;=&nbsp;s.createStream();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; notesIn.setContents(is);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; notesIn.setPosition(0);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MimePartInfo p&nbsp;=&nbsp;this.mimeParts.peek();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MIMEEntity m&nbsp;=&nbsp;p.getMimepart();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m.setContentFromBytes(notesIn,\np.getContentType(),\nm.getEncoding());\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}&nbsp;catch&nbsp;(NotesException\ne)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;endBodyPart()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.pop();\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;endMessage()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;try&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; doc.save();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; s.setConvertMime(this.mimeStatus);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;System.out.println(&quot;\n&nbsp; &nbsp; &nbsp;-- Import complete&quot;);\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}&nbsp;catch&nbsp;(NotesException\ne)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;field(Field&nbsp;rawField)&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.peek().createHeader(rawField.getName(),\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rawField.getBody());\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;startBodyPart()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.peek().createChildEntity(mimeParts);\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;startMessage()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;try&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeStatus&nbsp;=&nbsp;s.isConvertMime();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; s.setConvertMime(false);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MIMEEntity body&nbsp;=&nbsp;doc.createMIMEEntity(DocContentHandler.RTFIELDNAME);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.push(new&nbsp;MimePartInfo(body));&nbsp;//\nFirst element on the stack\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}&nbsp;catch&nbsp;(NotesException\ne)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}\n&nbsp; &nbsp;&nbsp;}\n}\n",
          "created": "Apr 23, 2012 11:16:03 PM"
        },
        {
          "url": "/blog/downloads/2012/MimePartInfo.java",
          "subject": "MimePartInfo.java",
          "description": "Classes to run imports:\npackage&nbsp;com.notessensei.mimeimport;\n\nimport&nbsp;java.io.IOException;\nimport&nbsp;java.io.InputStream;\nimport&nbsp;java.util.Stack;\n\nimport&nbsp;lotus.domino.Document;\nimport&nbsp;lotus.domino.MIMEEntity;\nimport&nbsp;lotus.domino.NotesException;\nimport&nbsp;lotus.domino.Session;\nimport&nbsp;lotus.domino.Stream;\n\nimport&nbsp;org.apache.james.mime4j.MimeException;\nimport&nbsp;org.apache.james.mime4j.parser.AbstractContentHandler;\nimport&nbsp;org.apache.james.mime4j.parser.ContentHandler;\nimport&nbsp;org.apache.james.mime4j.stream.BodyDescriptor;\nimport&nbsp;org.apache.james.mime4j.stream.Field;\n\npublic&nbsp;class&nbsp;DocContentHandler&nbsp;extends&nbsp;AbstractContentHandler&nbsp;implements\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;ContentHandler&nbsp;{\n\n&nbsp; &nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;TEXTMIMETYPE&nbsp;=&nbsp;&quot;text/plain&quot;;\n&nbsp; &nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;HTMLMIMETYPE&nbsp;=&nbsp;&quot;text/html&quot;;\n&nbsp; &nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;RTFIELDNAME&nbsp;=&nbsp;&quot;Body&quot;;\n\n&nbsp; &nbsp;&nbsp;Document&nbsp;doc&nbsp;=&nbsp;null;\n&nbsp; &nbsp; Session s&nbsp;=&nbsp;null;\n&nbsp; &nbsp;&nbsp;boolean&nbsp;mimeStatus&nbsp;=&nbsp;true;\n&nbsp; &nbsp; Stack&lt;MimePartInfo&gt;&nbsp;mimeParts&nbsp;=&nbsp;new&nbsp;Stack&lt;MimePartInfo&gt;();\n\n&nbsp; &nbsp;&nbsp;public&nbsp;DocContentHandler(Session\ns,&nbsp;Document&nbsp;newDoc)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.doc&nbsp;=&nbsp;newDoc;\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.s&nbsp;=&nbsp;s;\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;body(BodyDescriptor\nbd,&nbsp;InputStream&nbsp;is)&nbsp;throws&nbsp;MimeException,&nbsp;IOException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;String&nbsp;mtype&nbsp;=&nbsp;this.mimeParts.peek().getContentType();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;System.out.println(&quot;\n&nbsp; &nbsp; &nbsp;Mime-Part: &quot;&nbsp;+&nbsp;mtype);\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.createBody(bd,\nis);\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp;&nbsp;private&nbsp;void&nbsp;createBody(BodyDescriptor\nbd,&nbsp;InputStream&nbsp;is)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;try&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Stream notesIn&nbsp;=&nbsp;s.createStream();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; notesIn.setContents(is);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; notesIn.setPosition(0);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MimePartInfo p&nbsp;=&nbsp;this.mimeParts.peek();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MIMEEntity m&nbsp;=&nbsp;p.getMimepart();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m.setContentFromBytes(notesIn,\np.getContentType(),\nm.getEncoding());\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}&nbsp;catch&nbsp;(NotesException\ne)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;endBodyPart()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.pop();\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;endMessage()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;try&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; doc.save();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; s.setConvertMime(this.mimeStatus);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;System.out.println(&quot;\n&nbsp; &nbsp; &nbsp;-- Import complete&quot;);\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}&nbsp;catch&nbsp;(NotesException\ne)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;field(Field&nbsp;rawField)&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.peek().createHeader(rawField.getName(),\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rawField.getBody());\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;startBodyPart()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.peek().createChildEntity(mimeParts);\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;startMessage()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;try&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeStatus&nbsp;=&nbsp;s.isConvertMime();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; s.setConvertMime(false);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MIMEEntity body&nbsp;=&nbsp;doc.createMIMEEntity(DocContentHandler.RTFIELDNAME);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.push(new&nbsp;MimePartInfo(body));&nbsp;//\nFirst element on the stack\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}&nbsp;catch&nbsp;(NotesException\ne)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}\n&nbsp; &nbsp;&nbsp;}\n}\n",
          "created": "Apr 23, 2012 11:16:03 PM"
        },
        {
          "url": "/blog/downloads/2012/Mime2Doc.java",
          "subject": "Mime2Doc.java",
          "description": "Classes to run imports:\npackage&nbsp;com.notessensei.mimeimport;\n\nimport&nbsp;java.io.IOException;\nimport&nbsp;java.io.InputStream;\nimport&nbsp;java.util.Stack;\n\nimport&nbsp;lotus.domino.Document;\nimport&nbsp;lotus.domino.MIMEEntity;\nimport&nbsp;lotus.domino.NotesException;\nimport&nbsp;lotus.domino.Session;\nimport&nbsp;lotus.domino.Stream;\n\nimport&nbsp;org.apache.james.mime4j.MimeException;\nimport&nbsp;org.apache.james.mime4j.parser.AbstractContentHandler;\nimport&nbsp;org.apache.james.mime4j.parser.ContentHandler;\nimport&nbsp;org.apache.james.mime4j.stream.BodyDescriptor;\nimport&nbsp;org.apache.james.mime4j.stream.Field;\n\npublic&nbsp;class&nbsp;DocContentHandler&nbsp;extends&nbsp;AbstractContentHandler&nbsp;implements\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;ContentHandler&nbsp;{\n\n&nbsp; &nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;TEXTMIMETYPE&nbsp;=&nbsp;&quot;text/plain&quot;;\n&nbsp; &nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;HTMLMIMETYPE&nbsp;=&nbsp;&quot;text/html&quot;;\n&nbsp; &nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;RTFIELDNAME&nbsp;=&nbsp;&quot;Body&quot;;\n\n&nbsp; &nbsp;&nbsp;Document&nbsp;doc&nbsp;=&nbsp;null;\n&nbsp; &nbsp; Session s&nbsp;=&nbsp;null;\n&nbsp; &nbsp;&nbsp;boolean&nbsp;mimeStatus&nbsp;=&nbsp;true;\n&nbsp; &nbsp; Stack&lt;MimePartInfo&gt;&nbsp;mimeParts&nbsp;=&nbsp;new&nbsp;Stack&lt;MimePartInfo&gt;();\n\n&nbsp; &nbsp;&nbsp;public&nbsp;DocContentHandler(Session\ns,&nbsp;Document&nbsp;newDoc)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.doc&nbsp;=&nbsp;newDoc;\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.s&nbsp;=&nbsp;s;\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;body(BodyDescriptor\nbd,&nbsp;InputStream&nbsp;is)&nbsp;throws&nbsp;MimeException,&nbsp;IOException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;String&nbsp;mtype&nbsp;=&nbsp;this.mimeParts.peek().getContentType();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;System.out.println(&quot;\n&nbsp; &nbsp; &nbsp;Mime-Part: &quot;&nbsp;+&nbsp;mtype);\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.createBody(bd,\nis);\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp;&nbsp;private&nbsp;void&nbsp;createBody(BodyDescriptor\nbd,&nbsp;InputStream&nbsp;is)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;try&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Stream notesIn&nbsp;=&nbsp;s.createStream();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; notesIn.setContents(is);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; notesIn.setPosition(0);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MimePartInfo p&nbsp;=&nbsp;this.mimeParts.peek();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MIMEEntity m&nbsp;=&nbsp;p.getMimepart();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m.setContentFromBytes(notesIn,\np.getContentType(),\nm.getEncoding());\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}&nbsp;catch&nbsp;(NotesException\ne)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;endBodyPart()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.pop();\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;endMessage()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;try&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; doc.save();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; s.setConvertMime(this.mimeStatus);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;System.out.println(&quot;\n&nbsp; &nbsp; &nbsp;-- Import complete&quot;);\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}&nbsp;catch&nbsp;(NotesException\ne)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;field(Field&nbsp;rawField)&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.peek().createHeader(rawField.getName(),\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rawField.getBody());\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;startBodyPart()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.peek().createChildEntity(mimeParts);\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;startMessage()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;try&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeStatus&nbsp;=&nbsp;s.isConvertMime();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; s.setConvertMime(false);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MIMEEntity body&nbsp;=&nbsp;doc.createMIMEEntity(DocContentHandler.RTFIELDNAME);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.push(new&nbsp;MimePartInfo(body));&nbsp;//\nFirst element on the stack\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}&nbsp;catch&nbsp;(NotesException\ne)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}\n&nbsp; &nbsp;&nbsp;}\n}\n",
          "created": "Apr 23, 2012 11:16:03 PM"
        },
        {
          "url": "/blog/downloads/2012/DocContentHandler.java",
          "subject": "DocContentHandler.java",
          "description": "Classes to run imports:\npackage&nbsp;com.notessensei.mimeimport;\n\nimport&nbsp;java.io.IOException;\nimport&nbsp;java.io.InputStream;\nimport&nbsp;java.util.Stack;\n\nimport&nbsp;lotus.domino.Document;\nimport&nbsp;lotus.domino.MIMEEntity;\nimport&nbsp;lotus.domino.NotesException;\nimport&nbsp;lotus.domino.Session;\nimport&nbsp;lotus.domino.Stream;\n\nimport&nbsp;org.apache.james.mime4j.MimeException;\nimport&nbsp;org.apache.james.mime4j.parser.AbstractContentHandler;\nimport&nbsp;org.apache.james.mime4j.parser.ContentHandler;\nimport&nbsp;org.apache.james.mime4j.stream.BodyDescriptor;\nimport&nbsp;org.apache.james.mime4j.stream.Field;\n\npublic&nbsp;class&nbsp;DocContentHandler&nbsp;extends&nbsp;AbstractContentHandler&nbsp;implements\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;ContentHandler&nbsp;{\n\n&nbsp; &nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;TEXTMIMETYPE&nbsp;=&nbsp;&quot;text/plain&quot;;\n&nbsp; &nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;HTMLMIMETYPE&nbsp;=&nbsp;&quot;text/html&quot;;\n&nbsp; &nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;RTFIELDNAME&nbsp;=&nbsp;&quot;Body&quot;;\n\n&nbsp; &nbsp;&nbsp;Document&nbsp;doc&nbsp;=&nbsp;null;\n&nbsp; &nbsp; Session s&nbsp;=&nbsp;null;\n&nbsp; &nbsp;&nbsp;boolean&nbsp;mimeStatus&nbsp;=&nbsp;true;\n&nbsp; &nbsp; Stack&lt;MimePartInfo&gt;&nbsp;mimeParts&nbsp;=&nbsp;new&nbsp;Stack&lt;MimePartInfo&gt;();\n\n&nbsp; &nbsp;&nbsp;public&nbsp;DocContentHandler(Session\ns,&nbsp;Document&nbsp;newDoc)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.doc&nbsp;=&nbsp;newDoc;\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.s&nbsp;=&nbsp;s;\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;body(BodyDescriptor\nbd,&nbsp;InputStream&nbsp;is)&nbsp;throws&nbsp;MimeException,&nbsp;IOException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;String&nbsp;mtype&nbsp;=&nbsp;this.mimeParts.peek().getContentType();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;System.out.println(&quot;\n&nbsp; &nbsp; &nbsp;Mime-Part: &quot;&nbsp;+&nbsp;mtype);\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.createBody(bd,\nis);\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp;&nbsp;private&nbsp;void&nbsp;createBody(BodyDescriptor\nbd,&nbsp;InputStream&nbsp;is)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;try&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Stream notesIn&nbsp;=&nbsp;s.createStream();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; notesIn.setContents(is);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; notesIn.setPosition(0);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MimePartInfo p&nbsp;=&nbsp;this.mimeParts.peek();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MIMEEntity m&nbsp;=&nbsp;p.getMimepart();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m.setContentFromBytes(notesIn,\np.getContentType(),\nm.getEncoding());\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}&nbsp;catch&nbsp;(NotesException\ne)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;endBodyPart()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.pop();\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;endMessage()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;try&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; doc.save();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; s.setConvertMime(this.mimeStatus);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;System.out.println(&quot;\n&nbsp; &nbsp; &nbsp;-- Import complete&quot;);\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}&nbsp;catch&nbsp;(NotesException\ne)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;field(Field&nbsp;rawField)&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.peek().createHeader(rawField.getName(),\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rawField.getBody());\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;startBodyPart()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.peek().createChildEntity(mimeParts);\n&nbsp; &nbsp;&nbsp;}\n\n&nbsp; &nbsp; @Override\n&nbsp; &nbsp;&nbsp;public&nbsp;void&nbsp;startMessage()&nbsp;throws&nbsp;MimeException&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;try&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeStatus&nbsp;=&nbsp;s.isConvertMime();\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; s.setConvertMime(false);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MIMEEntity body&nbsp;=&nbsp;doc.createMIMEEntity(DocContentHandler.RTFIELDNAME);\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;this.mimeParts.push(new&nbsp;MimePartInfo(body));&nbsp;//\nFirst element on the stack\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}&nbsp;catch&nbsp;(NotesException\ne)&nbsp;{\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;}\n&nbsp; &nbsp;&nbsp;}\n}\n",
          "created": "Apr 23, 2012 11:16:03 PM"
        }
      ]
    },
    "/blog/downloads/SHWL-8TQQ2G/$File/": {
      "url": "/blog/downloads/SHWL-8TQQ2G/$File/",
      "subject": "Java source for PDF Output",
      "description": "Source code - use on your own risk\n",
      "created": "Apr 27, 2012 2:47:04 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2012/SimpleXMLDoc.java",
          "subject": "SimpleXMLDoc.java",
          "description": "Source code - use on your own risk\n",
          "created": "Apr 27, 2012 2:47:04 AM"
        },
        {
          "url": "/blog/downloads/2012/Form2XMLDefinition.java",
          "subject": "Form2XMLDefinition.java",
          "description": "Source code - use on your own risk\n",
          "created": "Apr 27, 2012 2:47:04 AM"
        },
        {
          "url": "/blog/downloads/2012/Field2XMLDefinition.java",
          "subject": "Field2XMLDefinition.java",
          "description": "Source code - use on your own risk\n",
          "created": "Apr 27, 2012 2:47:04 AM"
        },
        {
          "url": "/blog/downloads/2012/PDFReport.java",
          "subject": "PDFReport.java",
          "description": "Source code - use on your own risk\n",
          "created": "Apr 27, 2012 2:47:04 AM"
        },
        {
          "url": "/blog/downloads/2012/Notes2XML.java",
          "subject": "Notes2XML.java",
          "description": "Source code - use on your own risk\n",
          "created": "Apr 27, 2012 2:47:04 AM"
        },
        {
          "url": "/blog/downloads/2012/Notes2XMLImpl.java",
          "subject": "Notes2XMLImpl.java",
          "description": "Source code - use on your own risk\n",
          "created": "Apr 27, 2012 2:47:04 AM"
        },
        {
          "url": "/blog/downloads/2012/DefaultFo.xslt",
          "subject": "DefaultFo.xslt",
          "description": "Source code - use on your own risk\n",
          "created": "Apr 27, 2012 2:47:04 AM"
        }
      ]
    },
    "/blog/downloads/SHWL-8VWJGS/$File/": {
      "url": "/blog/downloads/SHWL-8VWJGS/$File/",
      "subject": "LDAP extensions for Domino",
      "description": "OpenNTF LDAP Compatibility Directory Extensions\n\nThe OpenNTF LDAP Compatibility Directory\nExtensions can be added to your Domino Directory to improve overall support\nfor LDAP compatibility from Domino servers.\n\nThere are 3 principle objectives for these\nextensions:\n\n1) Provide a profile-driven mechanism\nto set an overall BaseDN on your LDAP directory.\n\n2) Provide for hierarchical distinguished\ngroup names without interfering with existing Domino ACLs.\n\n3) Prevent invalid entries from appearing\nin LDAP queries which break standard tools like Apache Directory Services\nfor Eclipse.\n\nSecondary objectives include:\n\nCompatibility with PAM account management\nfor Linux systems.\n\nCreation of Organization and OrganizationalUnit\nrecords automatically when needed.\n\nGraceful fallback when configuration erroneous\nor incomplete.\n\nThere are 4 views, 4 subforms and 1 form\nincluded with this template. Of the 4 views, one is entirely new and is\nused for UIDNumber assignment, while the other 3 replace the existing ($LDAPCN),\n($LDAPHier) and ($LDAPRDNHier) views.\n\nOf the 4 subforms, two are new, providing\nthe PAM and DN extensions for Groups and Person records, while two demostrate\nimplementation of those extensions in the standard Extensibility schema\nprovided by the Domino Directory.\n\nThe form replaced the standard DirectoryProfile\nform, and adds a tab for LDAP where you can set the BaseDN and an optional\nDN for entries with potentially invalid characters ($, *, ~, #, etc)\n\nMany thanks to Andre Guirard for his excellent\ndocumentation on User Customizable\nview columns, though he will discover that this template proves one statement\nin his post wrong. And also to Alan Bell for his equally\nexcellent document on using Domino\nLDAP for authentication on Posix systems.\n",
      "created": "Jul 5, 2012 10:02:50 PM",
      "subEntries": [
        {
          "url": "/blog/downloads/2012/pubnames.ntf.dxl-.DemoDirectory.nsf.dxl.xml-ComparisonReportShort.xslt.html",
          "subject": "pubnames.ntf.dxl-.DemoDirectory.nsf.dxl.xml-ComparisonReportShort.xslt.html",
          "description": "OpenNTF LDAP Compatibility Directory Extensions\n\nThe OpenNTF LDAP Compatibility Directory\nExtensions can be added to your Domino Directory to improve overall support\nfor LDAP compatibility from Domino servers.\n\nThere are 3 principle objectives for these\nextensions:\n\n1) Provide a profile-driven mechanism\nto set an overall BaseDN on your LDAP directory.\n\n2) Provide for hierarchical distinguished\ngroup names without interfering with existing Domino ACLs.\n\n3) Prevent invalid entries from appearing\nin LDAP queries which break standard tools like Apache Directory Services\nfor Eclipse.\n\nSecondary objectives include:\n\nCompatibility with PAM account management\nfor Linux systems.\n\nCreation of Organization and OrganizationalUnit\nrecords automatically when needed.\n\nGraceful fallback when configuration erroneous\nor incomplete.\n\nThere are 4 views, 4 subforms and 1 form\nincluded with this template. Of the 4 views, one is entirely new and is\nused for UIDNumber assignment, while the other 3 replace the existing ($LDAPCN),\n($LDAPHier) and ($LDAPRDNHier) views.\n\nOf the 4 subforms, two are new, providing\nthe PAM and DN extensions for Groups and Person records, while two demostrate\nimplementation of those extensions in the standard Extensibility schema\nprovided by the Domino Directory.\n\nThe form replaced the standard DirectoryProfile\nform, and adds a tab for LDAP where you can set the BaseDN and an optional\nDN for entries with potentially invalid characters ($, *, ~, #, etc)\n\nMany thanks to Andre Guirard for his excellent\ndocumentation on User Customizable\nview columns, though he will discover that this template proves one statement\nin his post wrong. And also to Alan Bell for his equally\nexcellent document on using Domino\nLDAP for authentication on Posix systems.\n",
          "created": "Jul 5, 2012 10:02:50 PM"
        },
        {
          "url": "/blog/downloads/2012/pubnames.ntf.dxl-.DemoDirectory.nsf.dxl.xml-ComparisonReportDetail.xslt.html",
          "subject": "pubnames.ntf.dxl-.DemoDirectory.nsf.dxl.xml-ComparisonReportDetail.xslt.html",
          "description": "OpenNTF LDAP Compatibility Directory Extensions\n\nThe OpenNTF LDAP Compatibility Directory\nExtensions can be added to your Domino Directory to improve overall support\nfor LDAP compatibility from Domino servers.\n\nThere are 3 principle objectives for these\nextensions:\n\n1) Provide a profile-driven mechanism\nto set an overall BaseDN on your LDAP directory.\n\n2) Provide for hierarchical distinguished\ngroup names without interfering with existing Domino ACLs.\n\n3) Prevent invalid entries from appearing\nin LDAP queries which break standard tools like Apache Directory Services\nfor Eclipse.\n\nSecondary objectives include:\n\nCompatibility with PAM account management\nfor Linux systems.\n\nCreation of Organization and OrganizationalUnit\nrecords automatically when needed.\n\nGraceful fallback when configuration erroneous\nor incomplete.\n\nThere are 4 views, 4 subforms and 1 form\nincluded with this template. Of the 4 views, one is entirely new and is\nused for UIDNumber assignment, while the other 3 replace the existing ($LDAPCN),\n($LDAPHier) and ($LDAPRDNHier) views.\n\nOf the 4 subforms, two are new, providing\nthe PAM and DN extensions for Groups and Person records, while two demostrate\nimplementation of those extensions in the standard Extensibility schema\nprovided by the Domino Directory.\n\nThe form replaced the standard DirectoryProfile\nform, and adds a tab for LDAP where you can set the BaseDN and an optional\nDN for entries with potentially invalid characters ($, *, ~, #, etc)\n\nMany thanks to Andre Guirard for his excellent\ndocumentation on User Customizable\nview columns, though he will discover that this template proves one statement\nin his post wrong. And also to Alan Bell for his equally\nexcellent document on using Domino\nLDAP for authentication on Posix systems.\n",
          "created": "Jul 5, 2012 10:02:50 PM"
        }
      ]
    },
    "/blog/downloads/SHWL-8XV67H/$File/": {
      "url": "/blog/downloads/SHWL-8XV67H/$File/",
      "subject": "Wissel.net Chrome app",
      "description": "CRX File to wissel.net\n",
      "created": "Sep 6, 2012 11:33:33 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2012/wisselblog.crx",
          "subject": "wisselblog.crx",
          "description": "CRX File to wissel.net\n",
          "created": "Sep 6, 2012 11:33:33 AM"
        }
      ]
    },
    "/blog/downloads/SHWL72QNER.htm/$File/": {
      "url": "/blog/downloads/SHWL72QNER.htm/$File/",
      "subject": "SpringClean.xslt",
      "description": "",
      "created": "Apr 30, 2007 1:24:19 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2007/SpringClean.xslt",
          "subject": "SpringClean.xslt",
          "description": "",
          "created": "Apr 30, 2007 1:24:19 AM"
        }
      ]
    },
    "/blog/downloads/SHWL73E3KD.htm/$File/": {
      "url": "/blog/downloads/SHWL73E3KD.htm/$File/",
      "subject": "VistaCost.zip",
      "description": "",
      "created": "May 21, 2007 9:18:59 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2007/VistaCost.zip",
          "subject": "VistaCost.zip",
          "description": "",
          "created": "May 21, 2007 9:18:59 AM"
        }
      ]
    },
    "/blog/downloads/SHWL75TPRC.htm/$File/": {
      "url": "/blog/downloads/SHWL75TPRC.htm/$File/",
      "subject": "ZENDomino.zip",
      "description": "",
      "created": "Aug 7, 2007 2:32:32 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2007/ZENDomino.zip",
          "subject": "ZENDomino.zip",
          "description": "",
          "created": "Aug 7, 2007 2:32:32 AM"
        }
      ]
    },
    "/blog/downloads/bootstrap/$File/": {
      "url": "/blog/downloads/bootstrap/$File/",
      "subject": "CSS and JS for Bootstrap layout",
      "description": "",
      "created": "Dec 13, 2012 6:51:03 PM",
      "subEntries": [
        {
          "url": "/blog/downloads/2012/bootstrap.js",
          "subject": "bootstrap.js",
          "description": "",
          "created": "Dec 13, 2012 6:51:03 PM"
        },
        {
          "url": "/blog/downloads/2012/bootstrap.min.js",
          "subject": "bootstrap.min.js",
          "description": "",
          "created": "Dec 13, 2012 6:51:03 PM"
        },
        {
          "url": "/blog/downloads/2012/bootstrap-fileupload.js",
          "subject": "bootstrap-fileupload.js",
          "description": "",
          "created": "Dec 13, 2012 6:51:03 PM"
        },
        {
          "url": "/blog/downloads/2012/jquery.fittext.js",
          "subject": "jquery.fittext.js",
          "description": "",
          "created": "Dec 13, 2012 6:51:03 PM"
        },
        {
          "url": "/blog/downloads/2012/main.js",
          "subject": "main.js",
          "description": "",
          "created": "Dec 13, 2012 6:51:03 PM"
        },
        {
          "url": "/blog/downloads/2012/jquery-1.8.2.min.js",
          "subject": "jquery-1.8.2.min.js",
          "description": "",
          "created": "Dec 13, 2012 6:51:03 PM"
        },
        {
          "url": "/blog/downloads/2012/fontawesome-webfont.eot",
          "subject": "fontawesome-webfont.eot",
          "description": "",
          "created": "Dec 13, 2012 6:51:03 PM"
        },
        {
          "url": "/blog/downloads/2012/fontawesome-webfont.svg",
          "subject": "fontawesome-webfont.svg",
          "description": "",
          "created": "Dec 13, 2012 6:51:03 PM"
        },
        {
          "url": "/blog/downloads/2012/fontawesome-webfont.ttf",
          "subject": "fontawesome-webfont.ttf",
          "description": "",
          "created": "Dec 13, 2012 6:51:03 PM"
        },
        {
          "url": "/blog/downloads/2012/fontawesome-webfont.woff",
          "subject": "fontawesome-webfont.woff",
          "description": "",
          "created": "Dec 13, 2012 6:51:03 PM"
        },
        {
          "url": "/blog/downloads/2012/bootstrap.min.css",
          "subject": "bootstrap.min.css",
          "description": "",
          "created": "Dec 13, 2012 6:51:03 PM"
        },
        {
          "url": "/blog/downloads/2012/distinctive.css",
          "subject": "distinctive.css",
          "description": "",
          "created": "Dec 13, 2012 6:51:03 PM"
        }
      ]
    },
    "/blog/downloads/code.css/$File/": {
      "url": "/blog/downloads/code.css/$File/",
      "subject": "CSS used to render my code display",
      "description": "",
      "created": "Oct 29, 2011 1:45:04 PM",
      "subEntries": [
        {
          "url": "/blog/downloads/2011/blogcodedisplay.css",
          "subject": "blogcodedisplay.css",
          "description": "",
          "created": "Oct 29, 2011 1:45:04 PM"
        }
      ]
    },
    "/blog/downloads/ls4ee/$File/": {
      "url": "/blog/downloads/ls4ee/$File/",
      "subject": "LS4EE",
      "description": "LotusScript for embedded experiences eMails\n",
      "created": "Dec 14, 2012 10:20:31 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2012/LS4EE.html",
          "subject": "LS4EE.html",
          "description": "LotusScript for embedded experiences eMails\n",
          "created": "Dec 14, 2012 10:20:31 AM"
        }
      ]
    },
    "/blog/downloads/replicateall.html/$File/": {
      "url": "/blog/downloads/replicateall.html/$File/",
      "subject": "replicateall.lss",
      "description": "",
      "created": "Oct 3, 2006 12:45:32 AM",
      "subEntries": [
        {
          "url": "/blog/downloads/2006/replicateall.lss",
          "subject": "replicateall.lss",
          "description": "",
          "created": "Oct 3, 2006 12:45:32 AM"
        }
      ]
    },
    "/blog/downloads/sametimebuddyexport/$File/": {
      "url": "/blog/downloads/sametimebuddyexport/$File/",
      "subject": "Unsorted Sourcecode of Sametime Stuff",
      "description": "Agent code to create a batch file to extract\nall buddy lists using the Sametime\ntool provided by Epilio and some\nJava code to concatenate them and run a report. Sample report included.\n",
      "created": "Jun 30, 2010 5:43:42 PM",
      "subEntries": [
        {
          "url": "/blog/downloads/2010/BuddyListTool.zip",
          "subject": "BuddyListTool.zip",
          "description": "Agent code to create a batch file to extract\nall buddy lists using the Sametime\ntool provided by Epilio and some\nJava code to concatenate them and run a report. Sample report included.\n",
          "created": "Jun 30, 2010 5:43:42 PM"
        }
      ]
    }
  }
}