var destinationURL = "/blog/comments";

function getCommentForm(recaptchaid, parentId) {
	var result = "<form title=\"Comment form for blog discussion\" onSubmit=\"return addComment(this,'"
			+ recaptchaid
			+ "','"
			+ parentId
			+ "')\" class=\"form-vertical well well-raised\">\n";
	var endOfResult = "\n</div></fieldset></form>";
	result += "<fieldset><legend>Add your comment</legend>\n";
	result += "<p>Please note: <b>Comments without a valid and working eMail address will be removed.</b><br /> This is my site, so I decide what stays here and what goes.</p>";
	result += "<div class=\"control-group\" id=\"commentcontrol\" >";

	result += "<label class=\"control-label\" for=\"Commentor\">Name (required, published)</label>";
	result += "<div class=\"controls\">\n<input class=\"input-xlarge focused\" id=\"Commentor\" size=\"30\" accesskey=\"n\" name=\"nameAuthor\" />\n</div>";

	result += "<label class=\"control-label\" for=\"Email\">eMail (required, not published)</label>";
	result += "<div class=\"controls\">\n<input class=\"input-xlarge focused\" id=\"Email\" size=\"30\" accesskey=\"n\" name=\"txtEmail\" placeholder=\"A working eMail please!\"/>\n</div>";

	result += "<label class=\"control-label\" for=\"webSite\">URL (optional)</label>";
	result += "<div class=\"controls\">\n<input class=\"input-xlarge\" id=\"webSite\" size=\"30\" accesskey=\"n\" name=\"txtWebSite\" />\n</div>";

	result += "<label class=\"control-label\" for=\"wmd-input\">Your Comment (Use markdown like <a href=\"http://stackoverflow.com/editing-help\" target=\"_blank\" >Stackoverflow</a>)</label>\n";
	result += "<div class=\"controls\">\n";
	result += "<div id=\"wmd-panel\" class=\"wmd-panel\">\n";
	result += "<div id=\"wmd-button-bar\"></div>\n";
	result += "<textarea class=\"wmd-input\" id=\"wmd-input\" name=\"Body\"></textarea>";
	result += "</div></div></div>\n";
	result += "<label class=\"control-label\">Preview</label>";
	result += "<div id=\"wmd-preview\" class=\"wmd-panel wmd-preview\"></div>\n";
	result += "<div  class=\"controls\" id=\"captchadiv\">Captcha here</div>";
	result += "<div class=\"form-actions\">\n";
	result += "<button id=\"commentsubmit\" type=\"submit\" class=\"btn btn-primary btn-large\" >Post your comment</button>\n";
	result += "</div>\n";
	result += "<div class=\"alert alert-block\" id=\"alertContainer\" style=\"display : none\">One moment please, submitting comment...</div>";
	result += endOfResult;
	return result;
}

function addComment(form, recaptchaid, parentId) {
	$('#commentsubmit').hide();
	$('#commentcontrol').hide();
	$('#captchadiv').hide();
	$("#alertContainer").html("One moment please, submitting comment...")
			.show();

	$.postJSON({
		url : destinationURL,
		data : {
			Commentor : this.Commentor.value,
			eMail : this.Email.value,
			webSite : this.webSite.value,
			Body : this["wmd-input"].value,
			rChallenge : this.recaptcha_challenge_field.value,
			rResponse : this.recaptcha_response_field.value,
			parentId : parentId
		},
		success : function(result) {
			$("#alertContainer").html(result).addClass("alert-error").delay(
					2000).hide(200, function() {
				resetComment(recaptchaid, parentId);
			});
		},
		error : function(err) {
			$("#alertContainer").html(err.responseText).addClass("alert-error")
					.delay(1000).hide(200, function() {
						resetComment(recaptchaid, parentId);
					});
		}
	});
	return false;
}

function resetComment(recaptchaid, parentId) {
	var hasSuccess = $("div.commentsuccess");
	if (hasSuccess.length == 0) {
		// It didn't work!
		$("#alertContainer").show();
		$('#commentsubmit').show();
		$('#commentcontrol').show();
		$('#captchadiv').show();
	} else {
		renderComment(recaptchaid, parentId);
	}
}

function renderComment(recaptchaid, parentId) {
	var fid = "#commentform_" + parentId;
	var form = getCommentForm(recaptchaid, parentId);
	$(fid).empty().append(form);
	if (Recaptcha) {
		var theDiv = document.getElementById("captchadiv");
		Recaptcha.create(recaptchaid, theDiv, {
			tabindex : 1,
			theme : "clean" /*
							 * , callback : Recaptcha.focus_response_field
							 */
		});
	}

	// Markdown
	var converter1 = Markdown.getSanitizingConverter();
	var editor1 = new Markdown.Editor(converter1);
	editor1.run();

	// Comments that are not yet static
	$.ajax({
		url: destinationURL + "?parentid=" + parentId,
		type: 'GET',
		success: function(data){ 
			if (data.length > 0) {
				$("li.dynamicComments").remove();
				$("#nocomments").remove();
				$("#commentList").append(data);
			}
		},
		error: function(data) {
			// Crude error handling
			$("#alertContainer").html(data).show();
		}
	});
}

jQuery.extend({
	postJSON : function(params) {
		return jQuery.ajax(jQuery.extend(params, {
			type : "POST",
			data : JSON.stringify(params.data),
			dataType : "json",
			contentType : "application/json",
			processData : false
		}));
	}
});
